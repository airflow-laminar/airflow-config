
# @package _global_
_target_: airflow_config.Configuration

default_args:
  _target_: airflow_config.TaskArgs
  owner: test
  email: [myemail@myemail.com]
  email_on_failure: false
  email_on_retry: false
  retries: 0
  depends_on_past: false

default_dag_args:
  _target: airflow_config.DagArgs
  schedule: "01:00"
  start_date: "2024-01-01"
  catchup: false
  tags: ["utility", "test"]

dags:
  example_dag:
    default_args:
      owner: "custom_owner"
    description: "this is an example dag"
    schedule: "0 3 * * *"
    tasks:
      task_1:
        operator: "airflow.operators.bash_operator.BashOperator"
        args:
          _target_: airflow_config.BashOperatorArgs
          bash_command: "echo 1"
      task_2:
        operator: "airflow.operators.bash_operator.BashOperator"
        args:
          _target_: airflow_config.BashOperatorArgs
          bash_command: "echo 2"
        dependencies: [task_1]
      task_3:
        operator: "airflow.operators.python_operator.PythonOperator"
        args:
          _target_: airflow_config.PythonOperatorArgs
          python_callable: airflow_config.tests.setups.good.utils.print_hello.print_hello
          op_args: []
          op_kwargs: {}
          templates_dict: {}
          templates_exts: null
          show_return_value_in_logs: true
        dependencies: [task_1]

  example_dag2:
    default_args:
      owner: "custom_owner2"
    schedule: "0 4 * * *"
    tasks:
      task_1:
        operator: airflow.operators.bash_operator.BashOperator
        args:
          _target_: airflow_config.BashOperatorArgs
          bash_command: "echo 1"
      task_2:
        operator: airflow.operators.bash_operator.BashOperator
        args:
          _target_: airflow_config.BashOperatorArgs
          bash_command: "echo 2"
        dependencies: [task_1]
      task_3:
        operator: airflow.operators.bash_operator.BashOperator
        args:
          _target_: airflow_config.BashOperatorArgs
          bash_command: "echo 3"
        dependencies: [task_1]

#   example_dag3:
#     tasks:
#       task_1:
#         operator: airflow.operators.bash_operator.BashOperator
#         bash_command: "echo 1"
#       task_2:
#         operator: airflow.operators.bash_operator.BashOperator
#         bash_command: "echo 2"
#         dependencies: [task_1]
#       task_3:
#         operator: airflow.operators.bash_operator.BashOperator
#         bash_command: "echo 3"
#         dependencies: [task_1]
# 
#   example_dag4:
#     description: "this dag uses task groups"
#     task_groups:
#       task_group_1:
#         tooltip: "this is a task group"
#         dependencies: [task_1]
#     tasks:
#       task_1:
#         operator: airflow.operators.bash_operator.BashOperator
#         bash_command: "echo 1"
#       task_2:
#         operator: airflow.operators.bash_operator.BashOperator
#         bash_command: "echo 2"
#         task_group_name: task_group_1
#       task_3:
#         operator: airflow.operators.python_operator.PythonOperator
#         python_callable: airflow_config.tests.setups.good.utils.print_hello.print_hello
#         task_group_name: task_group_1
#         dependencies: [task_2]
#       task_4:
#         operator: airflow.operators.bash_operator.BashOperator
#         bash_command: "echo 1"
#         dependencies: [task_group_1]
